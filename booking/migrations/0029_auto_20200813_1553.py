# Generated by Django 3.0.7 on 2020-08-13 15:53

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('payments', '0003_invoice_business_email'),
        ('booking', '0028_auto_20200811_1032'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('active', 'active'), ('paused', 'paused'), ('cancelled', 'cancelled')], default='active', max_length=20)),
                ('purchase_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('duration', models.PositiveIntegerField(default=1, help_text='How long does the subscription run for (weeks/months)?')),
                ('duration_units', models.CharField(choices=[('weeks', 'weeks'), ('months', 'months')], default='months', max_length=255)),
                ('start_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, help_text='Date that this subscription first starts.  If subscription recurs monthly, set to a date 1st-28th to ensure consistent recurral.', null=True)),
                ('recurrence', models.BooleanField(default=True, help_text='Subscription automatically renews and bills students')),
                ('start_options', models.CharField(choices=[('start_date', 'Start from the specified start date'), ('signup_date', 'Start from the date students sign up'), ('first_booking_date', 'Start from date of first booked event')], default='start_date', help_text='Control when subscriptions start.  Choose start date to run the subscription for a set time period (e.g. from the 1st of each month).  The first subscription period will start on the start date you specify, and subsequent subscription period will recur from that date. Choose sign up date to have the subscription start individually for each student from the date they sign up and purchase.', max_length=255)),
                ('active', models.BooleanField(default=True, help_text='Visible on site and available to purchase')),
                ('advance_purchase_allowed', models.BooleanField(default=True, help_text="Allow students to purchase the next period's subscription before the current one has finished. This is recommended if this subscription allows students to make bookings for scheduled events.")),
                ('partial_purchase_allowed', models.BooleanField(default=False, help_text='For subscriptions with a specific start date, allow purchase of the current subscription period ata reduced price per remaining week.')),
                ('cost_per_week', models.DecimalField(blank=True, decimal_places=2, help_text='For subscriptions allowing partial purchase.  The price that will be charged per week/partial week remaining in the current subscription period', max_digits=8, null=True)),
                ('bookable_event_types', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.DeleteModel(
            name='BaseBlockConfig',
        ),
        migrations.AddField(
            model_name='subscription',
            name='config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.SubscriptionConfig'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='invoice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='payments.Invoice'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='booking.Subscription'),
        ),
    ]
