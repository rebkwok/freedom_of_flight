name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [3.7, 3.9]

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev

      - name: Install dependencies
        run: |
          set -xe
          python -m pip install --upgrade pip
          python -m venv venv
          venv/bin/pip install --progress-bar=off -r requirements.txt
          venv/bin/pip install coveralls

      - name: Run tests
        env:
          SITE_NAME: freedom_of_flight
          SITE_TITLE: Freedom of Flight Aerial
          SECRET_KEY: 'dummy_secret'
          EMAIL_HOST_USER: dummy-email@testmail.com
          EMAIL_HOST_PASSWORD: 'dummy_password'
          ACCOUNT_EMAIL_SUBJECT_PREFIX: "Freedom of Flight Aerial: "
          DEFAULT_FROM_EMAIL: dummy-email@testmail.com
          DEFAULT_STUDIO_EMAIL: dummy-studio-email@testmail.com
          DATABASE_URL: postgres://postgres:postgres@localhost/ci_test
          DEFAULT_PAYPAL_EMAIL: dummy-email@hotmail.com
          PAYPAL_TEST: True
          LOG_FOLDER: log_folder
          CI: True
          SEND_ALL_STUDIO_EMAILS: True
          INVOICE_KEY: dummy_key
          PAYPAL_IDENTITY_TOKEN: dummy_token
          CHECKOUT_METHOD: stripe
          STRIPE_PUBLISHABLE_KEY: dummy_key
          STRIPE_SECRET_KEY: dummy_secret
          STRIPE_CONNECT_CLIENT_ID: dummy_client_id
          STRIPE_ENDPOINT_SECRET: dummy_endpoint_secret
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          pytest --cov-config=.coveragerc --cov=.

      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}